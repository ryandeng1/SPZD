print(type(sint(5) < sint(3)))
# Returns a mod b
# Uses binary search to make things faster
def mod(a, b):
    left, right = MemValue(sint(0)), MemValue(a)
    mid = MemValue(sint(0))
    @while_do(lambda i: (left.read() < right.read()).reveal(), regint(0))
    def loop_body(i):
    	if_then(((left.read() + right.read()) % 2 == sint(0)).reveal())
    	mid.write((left.read() + right.read()) / sint(2))
    	else_then()
    	mid.write((left.read() + right.read() - sint(1)) / sint(2))
    	end_if()
    	if_then((a - mid.read() * b >= b).reveal())
    	left.write(mid.read() + sint(1))
    	else_then()
    	right.write(mid.read())
    	end_if()
    	return i
    return a - left.read() * b








a = sint(32)
b = sint(15)
print_ln("%s", mod(a, b).reveal())
@for_range(10)
def loop_body(i):
	print_ln("Hello world")



