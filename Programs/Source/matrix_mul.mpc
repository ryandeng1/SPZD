# (C) 2018 University of Bristol. See License.txt
# coding: latin-1
"""
  Solve Bankers bonus, aka Millionaires problem.
  to deduce the maximum value from a range of integer input.

  Demonstrate clients external to computing parties supplying input and receiving an authenticated result. See bankers-bonus-client.cpp for client (and setup instructions).

  For an implementation with communications security see bankers_bonus_commsec.mpc.
  
  Wait for MAX_NUM_CLIENTS to join the game or client finish flag to be sent
  before calculating the maximum.

  Note each client connects in a single thread and so is potentially blocked.
  
  Each round / game will reset and so this runs indefinitiely.
"""

from Compiler.types import sint, regint, Array, MemValue
from Compiler.instructions import listen, acceptclientconnection
from Compiler.library import print_ln, do_while, for_range
from Compiler.util import if_else

PORTNUM = 14000
MAX_NUM_CLIENTS = 2
NUM_ROWS = 5
NUM_COLS = 5




def multiply_matrices(left_matrix, right_matrix, rows, cols):
  result_matrix = Array(rows * cols, sint)
  @for_range(rows * cols)
  def range_body(i):
    result_matrix[i] = 0
  @for_range(rows)
  def range_body(i):
    @for_range(rows)
    def range_body(j):
      @for_range(cols)
      def range_body(k):
        result_matrix[i * cols + j] += left_matrix[i * cols + k].reveal() * right_matrix[k * cols + j].reveal()
  return result_matrix
  

def get_random_matrix(rows, cols):
    left = Array(NUM_ROWS * NUM_COLS, sint)
    right = Array(NUM_ROWS * NUM_COLS, sint)
    @for_range(len(left))
    def loop_body(i):
	left[i] = sint.get_random_int(16)
	right[i] = sint.get_random_int(16)
    return left, right 


def main():
    """Listen in while loop for players to join a game.
    Once maxiumum reached or have notified that round finished, run comparison and return result."""
    # Start listening for client socket connections
    """
    print_ln("LEFT")
    @for_range(NUM_ROWS * NUM_COLS)
    def loop_body(i):
	print_str("%s %s", left[i].reveal(), " ")
    print_ln("RIGHT")
    @for_range(NUM_ROWS * NUM_COLS)
    def loop_body(i):
	print_str("%s %s", right[i].reveal(), " ")
    print_ln("RESULT")
    @for_range(NUM_ROWS * NUM_COLS)
    def loop_body(i):
	print_str("%s %s", result[i].reveal(), " ")
    """
    left, right = get_random_matrix(NUM_ROWS, NUM_COLS)
    print_ln("%s %s", "Dimension", NUM_ROWS)
    start_timer(1)
    result = multiply_matrices(left, right, NUM_ROWS, NUM_COLS)
    stop_timer(1)


    print_ln("HOT DAMN")
    


main()
